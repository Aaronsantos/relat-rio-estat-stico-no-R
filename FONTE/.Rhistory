amostraEmDisco = read.table("~/Documentos/Code/R/PROJETO ESTATISTICA-20180206T113737Z-001/PROJETO ESTATISTICA/FONTE/amostraAaron.txt", header = T, sep = "\t")
amostraEmDisco
amostraEmDisco = read.table("amostraAaron.txt", header = T, sep = "\t")
amostraEmDisco = read.table("amostraAaron.txt", header = T, sep = "\t")
#--TESTE DA AMOSTRA EM DISCO:
amostraEmDisco = read.table("~/Documentos/Code/R/PROJETO ESTATISTICA-20180206T113737Z-001/PROJETO ESTATISTICA/FONTE/amostraAaron.txt", header = T, sep = "\t")
amostraEmDisco = read.table("~//Documentos//Code//R//PROJETO ESTATISTICA-20180206T113737Z-001//PROJETO ESTATISTICA//FONTE//amostraAaron.txt", header = T, sep = "\t")
?? read.table
??read.table
?read.ftable
??read.table
install.packages(c("quantreg", "viridisLite"))
amostraEmDisco = read.table("~/Documentos/Code/R/PROJETO ESTATISTICA-20180206T113737Z-001/PROJETO ESTATISTICA/FONTE/amostraAaron.txt", header = T, sep = "\t", encoding="UTF-8")
amostraEmDisco = read.table("~/Documentos/Code/R/PROJETO ESTATISTICA-20180206T113737Z-001/PROJETO ESTATISTICA/FONTE/amostraAaron.txt", header = T, sep = "\t", encoding="latin1")
amostraEmDisco
amostraEmDisco[1,]
amostra = amostraEmDisco
hist(amostra[,"cidade"])
hist(amostra[,"Cidade"])
pie(amostra[,"Cidade"])
pie(table(amostra[,"Cidade"]))
hist(table(amostra[,"Cidade"]))
table(amostra[,"Cidade"])
unique?
?unique()
unique(1..5)
1..5
1...5
1:4
unique(1:5)
unique(c(1:5),c(1:3))
c(1:5),c(1:3)
c(1:5,1:3)
unique(c(1:5,1:3))
?wich.max
?wich.max()
??wich.max
??wich
?match()
?tabulate()
?which.max()
wich.max(c(1:5,1:3,1,1))
which.max(c(1:5,1:3,1,1))
which.max(c(1:5,1:3,2,2))
which.max(c(1:5,1:3,2,2,9))
?tabulate()
testeV = c(1:5,1:3,2,2,2,9)
testeV
testeU = unique(testeV)
testeU
which.max(testeV)
testeV[12]
tabulate(testeV)
match(testeV,testeU)
tabulate(match(testeV,testeU))
which.max(tabulate(match(testeV,testeU)))
testeU[2]
tabulate(match(testeV,testeU))
match(testeV,testeU)
?match
rm(testeV)
rm(testeU)
sumary(amostra[,"Idade"])
summary(amostra[,"Idade"])
amostra[,"Idade"]
amostra[which.max(amostra[,"Idade"]),"Idade"]
Mode <- function(x) {
ux <- unique(x)
ux[which.max(tabulate(match(x, ux)))]
}
shapiro.test(amostra$Idade)
testeNormal = shapiro.test(amostra$Idade)
testeNormal
TesteNormal[1,1]
testeNormal[1,1]
testeNormal[1]
testeNormal[2]
testeNormal[]
